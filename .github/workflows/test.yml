name: Test
on:
  push:
    branches:
      - "*"
    paths-ignore:
      - "**.md"

jobs:
  publish-test-server:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "./packages/test-server"

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: vexilla
          password: ${{secrets.GITHUB_TOKEN}}

      - name: Build Test Server Image
        run: |
          docker build . --tag ghcr.io/vexilla/test-server:latest
          docker push ghcr.io/vexilla/test-server:latest

  # publish-host:
  #   runs-on: ubuntu-latest

  #   permissions:
  #     contents: read
  #     packages: write

  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Login to GitHub Container Registry
  #       uses: docker/login-action@v1
  #       with:
  #         registry: ghcr.io
  #         username: vexilla
  #         password: ${{secrets.GITHUB_TOKEN}}

  #     - name: Build Host Image
  #       run: |
  #         docker build . --tag ghcr.io/vexilla/host:latest
  #         docker push ghcr.io/vexilla/host:latest

  test:
    runs-on: ubuntu-latest
    # container: ghcr.io/vexilla/host:latest
    # needs: ["publish-test-server", "publish-host"]
    needs: ["publish-test-server"]

    permissions:
      contents: read
      packages: write

    services:
      test-server:
        credentials:
          username: vexilla
          password: ${{secrets.GITHUB_TOKEN}}
        image: ghcr.io/vexilla/test-server:latest
        ports:
          - 3000:3000
        options: |
          --health-cmd "curl -f http://localhost:3000/manifest.json"

    steps:
      - uses: actions/checkout@v3

      # Bazel-supported languages
      # - name: Cache Bazel
      #   uses: actions/cache@v3
      #   with:
      #     path: |
      #       ~/.cache/bazel
      #     key: ${{ runner.os }}-bazel-${{ hashFiles('.bazelversion', '.bazelrc', 'WORKSPACE', 'WORKSPACE.bazel', 'MODULE.bazel') }}
      #     restore-keys: |
      #       ${{ runner.os }}-bazel-
      # - run: bazel build //...
      # - run: bazel test //...
      #   env:
      #     TEST_SERVER_HOST: test-server
      # PHP
      # - run: docker-compose -f ./clients/php/docker-compose.ci.yml up  --exit-code-from php-custom
      #   env:
      #     TEST_SERVER_HOST: test-server
      - run: |
          docker build -t php-custom ./clients/php/.
          docker exec php-custom "curl -f http://test-server:3000/manifest.json"
      # - run: |
      #     cd ./clients/php
      #     composer install
      #     composer test
      #   env:
      #     TEST_SERVER_HOST: test-server

      # Elixir
      # - run: docker-compose -f ./clients/elixir/docker-compose.ci.yml up  --exit-code-from elixir-custom
      #   env:
      #     TEST_SERVER_HOST: test-server
